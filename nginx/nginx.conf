user nginx;
worker_processes 4;
worker_rlimit_nofile 40960;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 5120;
}

http {
    upstream api {
         server 127.0.0.1:8080;
	}

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    client_max_body_size 5M;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;
	

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    include /etc/nginx/conf.d/*.conf;

    server {
        server_name  nepse-web-stage.yco.com.np;

        root	/usr/share/nginx/html;

        #gzip on;
        #add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        #expires off;

	ssl_session_cache shared:SSL:10m;
	ssl_dhparam /etc/nginx/dhparam.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_prefer_server_ciphers on;
	ssl_ecdh_curve secp384r1:prime256v1;
	ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384';

        #http2_max_field_size 64k;
	#http2_max_header_size 512k;

	add_header X-Frame-Options SAMEORIGIN;
        server_tokens off;
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";

        location / {
            try_files $uri $uri/ /index.html;
        }

	########### NGINX STATUS #############
	location /nginx_status {
        # Turn on stats
        stub_status on;
	#access_log off;
        allow 127.0.0.1;
	#deny all;
	}

        location /api {
            rewrite ^/api/(.*) /nepse-website/$1 break;
            proxy_pass http://api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass_request_headers      on;
        }

    
    listen [::]:443 ssl ipv6only=on http2; # managed by Certbot
    listen 443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/nepse-web-stage.yco.com.np/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/nepse-web-stage.yco.com.np/privkey.pem; # managed by Certbot
    #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    add_header Strict-Transport-Security "max-age=15552000; includeSubdomains; preload" always;

}



    server {
    #if ($host = nepse-web-stage.yco.com.np) {
    #    return 301 https://$host$request_uri;
    #} # managed by Certbot


        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  nepse-web-stage.yco.com.np;

	root    /usr/share/nginx/html;

        add_header X-Frame-Options SAMEORIGIN;
        server_tokens off;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        location / {
            try_files $uri $uri/ /index.html;
        }

        location /api {
            rewrite ^/api/(.*) /nepse-website/$1 break;
            proxy_pass http://api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass_request_headers      on;
        }
        location = /basic_status {
                stub_status on;
                allow 192.168.21.98;
                deny all;
        }
    #return 404; # managed by Certbot

    }

}

