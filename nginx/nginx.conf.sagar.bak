user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    #   THIS IS WHERE OUR SERVICE SERVER IP:PORT GOES
    #   THIS IS WHERE THE REQUESTS FOR API SERVICES WILL BE PROXIED
		upstream api { 
        	server 192.168.21.61:8080;
	}
    proxy_buffer_size   128k;
    proxy_buffers   4 256k;
    proxy_busy_buffers_size   256k;
	
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;
    keepalive_timeout  5;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    fastcgi_buffers 8 16k;
    fastcgi_buffer_size 32k;
    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;


#For Goaccess
#    include /etc/nginx/sites-enabled/*;
#    
#    map $http_upgrade $connection_upgrade {
#    default upgrade;
#    '' close;
#    }    
#For Goaccess	
    

   server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        allow all;
	server_name  _;
        
        # ROOT IS THE DIRECTORY WHERE STATIC ANGULARJS BUILD IS PLACED
        # AND IS STATICALLY SERVED BY NGINX
        root         /usr/share/nginx/html;
        
   	    #index index.html index.htm index.nginx-debian.html;
        #try_files $uri$args $uri$args/ $uri/ /index.html =404;

        # Load configuration files for the default server block.
        #include /etc/nginx/default.d/*.conf;
        
        location / {
		    # ENABLING HTML5 ROUTING. ALL THINGS WILL BE HANDLED BY ANGULARJS ITSELF
	        try_files $uri $uri/index.html;
       	}

        
        # THIS IS REVERSE PROXY LOCATION
        # /API IS DIRECTED TO APPROPRIATE SERVICE SERVER AFTER THE URL IS REWRITTEN
        # PROXY INFORMATION IS PASSED ON AND ALL AVAILABLE HEADAERS ARE PROXIED TOO
	    location /api/{
              rewrite ^/api/(.*) /$1 break;
              proxy_pass http://api/;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection 'upgrade';
              proxy_set_header Host $host;
              proxy_cache_bypass $http_upgrade;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_pass_request_headers      on;
              proxy_set_header Access-Control-Allow-Origin $http_origin;
        }
	#more_clear_headers 'Access-Control-*';
        #more_clear_headers 'X-Powered-By';
	#more_set_headers 'Server: nepse-website';
	#add_header X-Frame-Options SAMEORIGIN;
    	#server_tokens off;
	#add_header X-Content-Type-Options nosniff;
	#add_header X-XSS-Protection "1; mode=block";


#        error_page 404 /404.html;
#            location = /40x.html {
#        }

#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
    }
server{
        listen       81 ;
        listen       [::]:81 ;
        server_name  _;

        # ROOT IS THE DIRECTORY WHERE STATIC ANGULARJS BUILD IS PLACED
        # AND IS STATICALLY SERVED BY NGINX
        root         /usr/share/nginx/rms;

            #index index.html index.htm index.nginx-debian.html;
        #try_files $uri$args $uri$args/ $uri/ /index.html =404;

        # Load configuration files for the default server block.
        #include /etc/nginx/default.d/*.conf;

        location / {
                    # ENABLING HTML5 ROUTING. ALL THINGS WILL BE HANDLED BY ANGULARJS ITSELF
                try_files $uri /index.html;
        }

        # THIS IS REVERSE PROXY LOCATION
        # /API IS DIRECTED TO APPROPRIATE SERVICE SERVER AFTER THE URL IS REWRITTEN
        # PROXY INFORMATION IS PASSED ON AND ALL AVAILABLE HEADAERS ARE PROXIED TOO
            location /api1/{
              rewrite ^/api1/(.*) /demo/$1 break;
              proxy_pass http://api/;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection 'upgrade';
              proxy_set_header Host $host;
              proxy_cache_bypass $http_upgrade;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_pass_request_headers      on;
             # proxy_set_header Access-Control-Allow-Origin $http_origin;
              proxy_set_header Access-Control-Allow-Origin *;
        }
}

}


