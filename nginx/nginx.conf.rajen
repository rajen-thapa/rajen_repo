user nginx;
worker_processes 2;
worker_rlimit_nofile 8192;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;


# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 4096;
}

http {

        upstream api{
                server 192.168.21.63:8080;
        }

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    client_max_body_size 5M;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;
        limit_req_zone $binary_remote_addr zone=one:10m rate=2r/s;

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  _;
        root         /usr/share/nginx/html;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        set_real_ip_from 192.168.21.0/24;
        #real_ip_recursive on;
        real_ip_header proxy_protocol; 

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;


   location / {
                try_files $uri $uri/ /index.html;
        }

   location /nginx_status {
                stub_status on;
                access_log off;
                allow 192.168.21.63;
                allow 127.0.0.1;
                deny all;
        }
   
#   location /goaccess {
#		allow 10.91.234.6/24;
#		allow 192.168.1.64/24;
#		deny 192.168.1.64;
#	}

                # THIS IS REVERSE PROXY LOCATION
        # /API IS DIRECTED TO APPROPRIATE SERVICE SERVER AFTER THE URL IS REWRITTEN
        # PROXY INFORMATION IS PASSED ON AND ALL AVAILABLE HEADAERS ARE PROXIED TOO
            location /api{
              rewrite ^/api/(.*) /nepse-website/$1 break;
              proxy_pass http://api;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection 'upgrade';
              proxy_set_header Host $host;
              proxy_cache_bypass $http_upgrade;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_pass_request_headers      on;
	      #limit_req zone=one;
        }


        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }
}
