user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {

        #upstream api{
                #server 192.168.21.65:80;
        #}

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;
        limit_req_zone $binary_remote_addr zone=one:10m rate=2r/s;

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  _;
        root         /usr/share/nginx/html;

	#add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
	#set_real_ip_from 10.23.20.0/24;
	#real_ip_recursive on;
	#real_ip_header proxy_protocol; 

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;


	############ BLOCKING NEPAL SHARE APP(with empty referer)  ##############
	#if ($http_referer = "")
		#{  return 403;
		#}

	#valid_referers server_names ~.;
	#if ($invalid_referer) {
    				#return   403;
	#}

	########## BLOCKING NEPALSHARE USERAGENT #############
	#if ($http_user_agent = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36"){
    		#return 403;
       	#}
	
	############# NGINX SECURITY HARDENING ###############

	#more_clear_headers 'Access-Control-*';
	#more_clear_headers 'X-Powered-By';
	#more_set_headers 'Server: nepse-website';
	#add_header X-Frame-Options SAMEORIGIN;
    	#server_tokens off;
	#add_header X-Content-Type-Options nosniff;
	#add_header X-XSS-Protection "1; mode=block";




   location / {
                try_files $uri $uri/ /index.html;
        }

        #location /nginx_status {
                #stub_status on;
                #access_log off;
                #allow 172.16.11.42;
                #deny all;
        #}


        ############# BROWSER-CACHE-CONFIGURATION ############
        #include /etc/nginx/snippets/browser-cache.conf;



        ############# GZIP-CONFIGURATION #####################
        #include /etc/nginx/snippets/gzip.conf;




                # THIS IS REVERSE PROXY LOCATION
        # /API IS DIRECTED TO APPROPRIATE SERVICE SERVER AFTER THE URL IS REWRITTEN
        # PROXY INFORMATION IS PASSED ON AND ALL AVAILABLE HEADAERS ARE PROXIED TOO
            #location /api{
              #rewrite ^/api/(.*) /nepse-website/$1 break;
              #proxy_pass http://api;
              #proxy_http_version 1.1;
              #proxy_set_header Upgrade $http_upgrade;
              #proxy_set_header Connection 'upgrade';
              #proxy_set_header Host $host;
              #proxy_cache_bypass $http_upgrade;
              #proxy_set_header X-Real-IP $remote_addr;
              #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              #proxy_pass_request_headers      on;
#       limit_req zone=one;
        }


        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2 default_server;
#        listen       [::]:443 ssl http2 default_server;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        location / {
#        }
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

}
